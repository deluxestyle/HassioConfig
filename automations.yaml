- id: xiaomi_vacuum_notification_off
  alias: 'Xiaomi Staubsauger: Benachrichtigung fertig'
  trigger:
  - platform: state
    entity_id:
    - vacuum.roborock_vacuum
    from: returning
  action:
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'Staubsauger fertig - Dauer: {{ states.sensor.xiaomi_vacuum_v1_last_clean_duration.state
        }} min - gesaugte Fläche: {{ states.sensor.xiaomi_vacuum_last_clean_area.state
        }} qm | Fehler {{ states.counter.xiaomo_errors.state }}'
      notification_id: xiaomi_vacuum_status
      title: StaubRobo
    service: script.notify_script
  mode: single
- id: xiaomi_vacuum_notification_on
  alias: 'Xiaomi Staubsauger: Benachrichtigung gestartet'
  trigger:
  - entity_id:
    - vacuum.roborock_vacuum
    platform: state
    to: cleaning
    from: docked
  action:
  - service: notify.all_ios_devices
    data:
      message: Staubsauger gestartet
      data:
        actions:
        - action: STOP_VACUUM
          title: Staubsauger stoppen
  mode: single
- id: xiaomi_vacuum_notification_blocked
  alias: 'Xiaomi Staubsauger: Benachrichtigung Fehler'
  trigger:
  - entity_id: vacuum.roborock_vacuum
    platform: state
    to: error
  condition:
  - condition: template
    value_template: '{{ states.vacuum.roborock_vacuum.attributes.error != ''Clean
      main brush'' }}'
  action:
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'Staubsauger blockiert - Error: {{ states.vacuum.roborock_vacuum.attributes.error
        }} '
      notification_id: xiaomi_vacuum_error
      title: StaubRobo
    service: script.notify_script
  mode: single
- id: '1523001167559'
  alias: 'Xiaomi Staubsauger: Neustart'
  trigger:
  - entity_id: sensor.xiaomi_vacuum_status
    platform: state
    to: Error
  condition:
  - condition: template
    value_template: '{{ states.vacuum.roborock_vacuum.attributes.error == ''Clean
      main brush'' }}'
  action:
  - data:
      entity_id: vacuum.roborock_vacuum
    service: vacuum.start
  - data:
      entity_id: counter.xiaomo_errors
    service: counter.increment
- id: '1532273712071'
  alias: 'Entertainment: AVR - Quelle auswählen'
  trigger:
  - entity_id: input_select.avr_source
    platform: state
  condition:
  - condition: template
    value_template: '{{ states.input_select.avr_source.state != "--" }}'
  action:
  - data_template:
      entity_id: media_player.harman_kardon_avr
      source: '{% if states.input_select.avr_source.state == "AppleTV" %}STB {% elif
        states.input_select.avr_source.state ==  "AirPlay" %}Audio {% elif states.input_select.avr_source.state
        ==  "TV" %}TV {% elif states.input_select.avr_source.state ==  "Home Network"
        %}Home Network {% elif states.input_select.avr_source.state ==  "vTuner" %}vTuner
        {% elif states.input_select.avr_source.state ==  "Turntable" %}AUX {% endif
        %}'
    service: media_player.select_source
  - data:
      entity_id: input_select.avr_source
      option: --
    service: input_select.select_option
  mode: single
- id: '1533660030341'
  alias: 'Entertainment: AVR - verbinden'
  description: dummy Bedienung um Verbindung sicherzustellen
  trigger:
  - entity_id: device_tracker.avr_151s
    platform: state
    to: home
  condition: []
  action:
  - delay: 00:02:00
  - data:
      entity_id: media_player.harman_kardon_avr
    service: media_player.volume_down
  mode: single
- id: '1533984172028'
  alias: 'Xiaomi Staubsauger: Stoppen '
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: STOP_VACUUM
  condition: []
  action:
  - service: vacuum.stop
    data: {}
    target:
      entity_id: vacuum.roborock_vacuum
  mode: single
- id: '1542650541048'
  alias: 'Xiaomi Staubsauger: Benachrichtigung Sensor kritisch'
  trigger:
  - below: '2'
    platform: numeric_state
    entity_id: sensor.xiaomi_vacuum_sensor_dirty_left
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition:
  - condition: device
    device_id: d395d1f0c190ee5b6e5c1bb4424f0515
    domain: vacuum
    entity_id: vacuum.roborock_vacuum
    type: is_docked
  action:
  - data:
      message: 'Sensor reinigen: {{ states.sensor.xiaomi_vacuum_sensor_dirty_left.state
        }} h übrig'
      notification_id: xiaomi_sensor
      title: Xiaomi StaubRobo
    service: persistent_notification.create
  mode: single
- id: '1543619209115'
  alias: 'HomeAssistant: Restart'
  description: ''
  trigger:
  - event: start
    platform: homeassistant
  condition: []
  action:
  - service: homeassistant.update_entity
    data:
      entity_id: sensor.hacs
  - delay: 00:01:30
  - service: automation.reload
    data: {}
  mode: single
- id: '1548418632803'
  alias: 'Xiaomi Staubsauger: Zähler zurücksetzen'
  trigger:
  - entity_id: vacuum.roborock_vacuum
    from: docked
    platform: state
    to: cleaning
  condition: []
  action:
  - data:
      entity_id: counter.xiaomo_errors
    service: counter.reset
- id: '1550439982602'
  alias: 'Xiaomi Staubsauger: Starten nach Push'
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: START_VACUUM
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: start_vacuum
  condition: []
  action:
  - data:
      entity_id: vacuum.roborock_vacuum
    service: vacuum.start
  - data:
      entity_id: vacuum.roborock_vacuum
      fan_speed: Turbo
    service: vacuum.set_fan_speed
  mode: single
- id: '1563024961089'
  alias: 'Xiaomi Staubsauger: Hauptbürste wechseln'
  trigger:
  - below: '3'
    platform: numeric_state
    entity_id: sensor.xiaomi_vacuum_main_brush_left
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition:
  - condition: device
    device_id: d395d1f0c190ee5b6e5c1bb4424f0515
    domain: vacuum
    entity_id: vacuum.roborock_vacuum
    type: is_docked
  action:
  - data:
      message: 'Hauptbürste reinigen: {{ states.sensor.xiaomi_vacuum_main_brush_left.state
        }} h übrig'
      notification_id: xiaomi_brush
      title: Xiaomi StaubRobo Hauptbürste
    service: persistent_notification.create
- id: '1564908105933'
  alias: 'Benachrichtigung: RAM zu hoch'
  trigger:
  - above: 75
    entity_id: sensor.memory_use_percent
    platform: numeric_state
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'RAM Auslastung zu hoch: {{ states.sensor.memory_use_percent.state
        }} % '
      notification_id: pi
      title: Raspi
    service: script.notify_script
  mode: single
- id: '1568628137654'
  alias: 'Xiaomi Staubsauger: Benachrichtigung Filter kritisch'
  trigger:
  - below: '2'
    platform: numeric_state
    entity_id: sensor.xiaomi_vacuum_filter_left
    for:
      hours: 0
      minutes: 2
      seconds: 0
  condition:
  - condition: device
    device_id: d395d1f0c190ee5b6e5c1bb4424f0515
    domain: vacuum
    entity_id: vacuum.roborock_vacuum
    type: is_docked
  action:
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'Filter wechseln: {{ states.sensor.xiaomi_vacuum_filter_left.state
        }} h übrig'
      notification_id: xiaomi_filter
      title: Xiaomi StaubRobo
    service: script.notify_script
  mode: single
- id: '1570440017469'
  alias: 'iOS: Badge zurücksetzen'
  trigger:
  - event_data:
      sourceDeviceName: iPhone14Pro
    event_type: ios.became_active
    platform: event
  condition: []
  action:
  - service: script.notify_clean_badge
    data: {}
  mode: single
- id: '1571050762220'
  alias: 'Xiaomi Staubsauger: Fehler Hinweis'
  trigger:
  - entity_id: group.presence
    platform: state
    to: home
    for: 00:02:00
  condition:
  - condition: state
    entity_id: vacuum.roborock_vacuum
    state: error
  action:
  - data:
      entity_id: vacuum.roborock_vacuum
    service: vacuum.locate
  mode: single
- id: '1574071080398'
  alias: 'Entertainment: Steckdosenleiste ausschalten'
  description: ''
  trigger:
  - at: 00:01
    platform: time
  - platform: state
    for:
      hours: 0
      minutes: 15
      seconds: 0
    entity_id:
    - remote.harmony_hub_2
    to: 'off'
  condition: []
  action:
  - delay: 00:01:00
  - data:
      entity_id: switch.steckdosenleiste
    service: switch.turn_off
  mode: restart
- id: '1584265149079'
  alias: 'Benachrichtigung: CPU Temp zu hoch'
  description: ''
  trigger:
  - above: '75'
    entity_id: sensor.cpu_temperature
    for:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
    platform: numeric_state
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'CPU Temp zu hoch: {{ states ( "sensor.cpu_temperature" ) }}°'
      notification_id: cpu_temp
      title: CPU Temp
    service: script.notify_script
- id: '1584265149080'
  alias: 'Benachrichtigung: CPU Auslastung zu hoch'
  description: ''
  trigger:
  - above: '50'
    for: 00:10:00
    platform: numeric_state
    entity_id: sensor.processor_use
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'CPU Auslastung zu hoch: {{ states ( "sensor.processor_use" ) }}%'
      notification_id: cpu
      title: CPU Auslastung
    service: script.notify_script
  mode: single
- id: '1607432908571'
  alias: 'Entertainment: Steckdosenleiste einschalten'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - remote.harmony_hub_2
    to: 'on'
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.steckdosenleiste
  mode: single
- id: '1612343173377'
  alias: 'iOS: Telefonat'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: phonecall
  condition: []
  action:
  - service: script.sonos_stopp
    data: {}
  mode: single
- id: '1614106691093'
  alias: 'Sonos: Lautstärke anpassen'
  description: ''
  trigger:
  - platform: event
    event_type: call_service
    event_data:
      domain: media_player
      service: volume_up
  - platform: event
    event_type: call_service
    event_data:
      domain: media_player
      service: volume_down
  condition:
  - condition: state
    entity_id: input_boolean.sync_volume
    state: 'on'
  - condition: template
    value_template: '{{ trigger.event.data.service_data.entity_id != "media_player.harman_kardon_avr"}}'
  action:
  - service: script.sonos_set_volume
    data:
      sonos_id: '{{ trigger.event.data.service_data.entity_id | regex_replace(find="media_player.",
        replace="") }}'
  mode: queued
  max: 10
- id: '1620892776475'
  alias: 'Xiaomi Staubsauger: Abwesenheit'
  description: ''
  trigger:
  - entity_id: group.presence
    platform: state
    to: not_home
  condition:
  - after: 07:00
    before: '19:00'
    condition: time
  - condition: not
    conditions:
    - condition: state
      entity_id: vacuum.roborock_vacuum
      state: cleaning
  action:
  - service: notify.all_ios_devices
    data:
      message: Staubsauger starten?
      data:
        actions:
        - action: START_VACUUM
          title: Starten
  mode: single
- id: '1630350328215'
  alias: 'Batterie: Niedriger Batteriestand'
  description: ''
  use_blueprint:
    path: tanzerw/low_battery.yaml
    input:
      time: '10:00:00'
      actions:
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.persistent_notification
        data: {}
      - data:
          message: 'Batteriewarnung für: {{sensors}}'
          notification_id: battery
          title: Batteriewarnung
        service: script.notify_script
      - service: input_boolean.turn_on
        target:
          entity_id: input_boolean.batteriewarnung
        data: {}
      threshold: 5
      exclude:
        entity_id:
        - sensor.ipad_battery_level
        - sensor.iphone14pro_battery_level
- id: '1634394580227'
  alias: 'DS118: Benachrichtigung shutdown'
  description: ''
  trigger:
  - platform: state
    to: 'off'
    for:
      hours: 0
      minutes: 3
      seconds: 0
    entity_id:
    - switch.ds118
  condition: []
  action:
  - service: notify.all_ios_devices
    data:
      data:
        actions:
        - action: DS118_TURN_ON
          title: DS118 einschalten
      message: DS118 wurde herruntergefahren
  mode: single
- id: '1634394824204'
  alias: 'DS118: Einschalten nach Push'
  description: Schaltet alle Lichter und Steckdosen aus und aktiviert den Bewegungssensor
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: DS118_TURN_ON
  condition: []
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.ds118
  mode: single
- id: '1658949383573'
  alias: 'Internet: Neustart'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.fritz_box_7590_verbindung
    for:
      hours: 0
      minutes: 30
      seconds: 0
    from: 'on'
  condition: []
  action:
  - device_id: 36a8d6e82781d3f1100027ab2637239a
    domain: button
    entity_id: button.fritz_box_7590_reboot
    type: press
  - repeat:
      until:
      - condition: state
        state: 'on'
        entity_id: binary_sensor.fritz_box_7590_verbindung
      sequence:
      - delay:
          hours: 1
          minutes: 0
          seconds: 0
          milliseconds: 0
      - device_id: 36a8d6e82781d3f1100027ab2637239a
        domain: button
        entity_id: button.fritz_box_7590_reconnect
        type: press
  mode: single
- id: '1664976725414'
  alias: 'DS118: Raspi Backup'
  description: ''
  trigger:
  - platform: time
    at: 02:00:00
  condition:
  - condition: time
    weekday:
    - wed
  - condition: state
    entity_id: switch.ds118
    state: 'off'
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id: switch.ds118
  mode: single
- id: '1666460813767'
  alias: 'Benachrichtigung: Swap zu hoch'
  description: ''
  trigger:
  - above: 40
    for:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
    platform: numeric_state
    entity_id: sensor.swap_use_percent
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'Swap Auslastung zu hoch: {{ states ( "sensor.swap_use_percent" ) }}%'
      notification_id: swap
      title: swap Auslastung
    service: script.notify_script
  mode: single
- id: '1667402945500'
  alias: 'Benachrichtigung: Geschirrspüler fertig'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.013050391085014163_bsh_common_status_operationstate
    to: BSH.Common.EnumType.OperationState.Finished
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: Geschirrspüler fertig
      notification_id: dish_washer
      title: Geschirrspüler
    service: script.notify_script
  mode: single
- id: '1668452168948'
  alias: 'Harmony: Set Bass'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - remote.harmony_hub_2
    attribute: current_activity
    to: AirPlay 2
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: Airplay
  - platform: state
    entity_id:
    - remote.harmony_hub_2
    attribute: current_activity
    to: Plattenspieler
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: turntable
  - platform: state
    entity_id:
    - remote.harmony_hub_2
    attribute: current_activity
    to: Apple TV
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: appletv
  - platform: state
    entity_id:
    - remote.harmony_hub_2
    attribute: current_activity
    to: TV
    for:
      hours: 0
      minutes: 0
      seconds: 30
    id: tv
  condition: []
  action:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: Airplay
        - condition: trigger
          id: turntable
      sequence:
      - service: script.harmony_tone
        data: {}
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: appletv
        - condition: trigger
          id: tv
      sequence:
      - service: script.harmony_tone_bass_verringern
        data: {}
  mode: single
- id: '1673599304677'
  alias: 'Entertainment: Fix TV'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - remote.harmony_hub_2
    attribute: current_activity
    to: TV
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: TV
  - platform: state
    entity_id:
    - remote.harmony_hub_2
    attribute: current_activity
    to: Apple TV
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: FIRETV
  condition:
  - condition: state
    entity_id: media_player.samsung_q60aa_43_tv
    state: 'off'
  action:
  - service: remote.send_command
    data:
      device: '79732412'
      command: PowerOn
    target:
      entity_id: remote.harmony_hub_2
  - condition: trigger
    id: TV
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - service: remote.send_command
    data:
      device: '79732412'
      command: PowerOn
    target:
      entity_id: remote.harmony_hub_2
  mode: single
- id: '1677324816990'
  alias: 'Benachrichtigung: Updates'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - update.wud_container_local_deconz
    - update.wud_container_local_dockerproxy
    - update.wud_container_local_dnscrypt
    - update.wud_container_local_mosquitto
    - update.wud_container_local_nginx_proxy_manager
    - update.wud_container_local_pihole
    - update.wud_container_local_vaultwarden
    - update.wud_container_local_wud
    - binary_sensor.updater_hacs
    - binary_sensor.home_assistant_versions_update_available
    - update.nextcloud_hub
    to: 'on'
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.persistent_notification
  - data:
      message: '{{ trigger.from_state.attributes.friendly_name }} Update verfügbar '
      notification_id: '{{ trigger.from_state.attributes.friendly_name }} Update '
      title: Update
    service: script.notify_script
  mode: single
- id: '1678891141768'
  alias: 'HomeAssistant: Stop'
  description: ''
  trigger:
  - platform: homeassistant
    event: shutdown
  condition: []
  action:
  - service: homeassistant.disable_config_entry
    data:
      config_entry_id: 51ada781f9fa5e08f8ee7036c1a97af2
  mode: single
- id: '1679052124637'
  alias: Home Connect
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.home_connect_status
    to: blocked
  condition: []
  action:
  - service: homeassistant.disable_config_entry
    data:
      config_entry_id: d3bd095efc0273661c4231c26f928ded
  mode: single
- id: '1684614441041'
  alias: 'Sonos: Volume anpassen'
  description: ''
  trigger:
  - platform: time
    at: 00:00:01
  condition: []
  action:
  - service: script.sonos_set_volume_4
    data: {}
  mode: single
- id: '1692959068223'
  alias: 'Benachrichtigung: PiHole Problem '
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.docker_pihole_state
    for:
      hours: 0
      minutes: 1
      seconds: 0
    from: running
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: PiHole nicht verfügbar
      notification_id: pihole
      title: PiHole
    service: script.notify_script
  mode: single
- id: '1696409652364'
  alias: Abwesenheit
  description: ''
  trigger:
  - platform: state
    entity_id:
    - group.presence
    to: not_home
  condition: []
  action:
  - service: script.alles_ausschalten
    data: {}
  mode: single
