- id: update_notification
  alias: 'Benachrichtigung:  Update HASS'
  trigger:
  - platform: state
    from: 'off'
    entity_id: binary_sensor.updater_addons
  - platform: state
    entity_id: binary_sensor.updater_supervisor
    from: 'off'
  - platform: state
    entity_id: sensor.updater_core
    from: 'off'
  action:
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: Update für Home Assitant verfügbar
      notification_id: system_update
      title: Update
    service: script.notify_script
  mode: single
- id: family_not_home
  alias: Abwesenheitsschaltung
  description: Schaltet alle Lichter und Steckdosen aus und aktiviert den Bewegungssensor
  trigger:
  - entity_id: sensor.presence
    platform: state
    to: not_home
  condition: []
  action:
  - data: {}
    service: script.alles_ausschalten
  - data: {}
    entity_id: automation.benachrichtigung_bewegung_erkannt
    service: automation.turn_on
  - service: automation.turn_on
    data: {}
    entity_id: automation.benachrichtigung_wohnungstur_offen
  mode: single
- id: xiaomi_vacuum_notification_off
  alias: 'Xiaomi Staubsauger: Benachrichtigung fertig'
  trigger:
  - entity_id: sensor.xiaomi_vacuum_status
    platform: state
    to: Returning home
  action:
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'Staubsauger fertig - Dauer: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaning_time
        }} min - gesaugte Fläche: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.cleaned_area
        }} qm | Fehler {{ states.counter.xiaomo_errors.state }}'
      notification_id: xiaomi_vacuum_status
      title: StaubRobo
    service: script.notify_script
  mode: single
- id: xiaomi_vacuum_notification_on
  alias: 'Xiaomi Staubsauger: Benachrichtigung gestartet'
  trigger:
  - entity_id: vacuum.xiaomi_vacuum_cleaner
    from: docked
    platform: state
    to: cleaning
  action:
  - data_template:
      data:
        push:
          category: vacuum_stop
      message: Staubsauger gestartet
    service: notify.mobile_app_iphone11pro
  mode: single
- id: xiaomi_vacuum_notification_blocked
  alias: 'Xiaomi Staubsauger: Benachrichtigung Fehler'
  trigger:
  - entity_id: vacuum.xiaomi_vacuum_cleaner
    platform: state
    to: error
  condition:
  - condition: template
    value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.error != ''Clean
      main brush'' }}'
  action:
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'Staubsauger blockiert - Error: {{ states.vacuum.xiaomi_vacuum_cleaner.attributes.error
        }} '
      notification_id: xiaomi_vacuum_error
      title: StaubRobo
    service: script.notify_script
  mode: single
- id: '1523001167559'
  alias: 'Xiaomi Staubsauger: Neustart'
  trigger:
  - entity_id: sensor.xiaomi_vacuum_status
    platform: state
    to: Error
  condition:
  - condition: template
    value_template: '{{ states.vacuum.xiaomi_vacuum_cleaner.attributes.error == ''Clean
      main brush'' }}'
  action:
  - data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
    service: vacuum.start
  - data:
      entity_id: counter.xiaomo_errors
    service: counter.increment
- id: '1532176861984'
  alias: 'Sonos: automatisch starten'
  trigger:
  - entity_id: device_tracker.iphone11pro
    platform: state
    to: home
  condition:
  - after: 08:00:00
    before: '20:00:00'
    condition: time
  - condition: and
    conditions:
    - condition: state
      entity_id: person.christina
      state: not_home
  action:
  - data: {}
    service: script.sonos_radio_superfly
  mode: single
- id: '1532273712071'
  alias: 'Harman Kardon AVR: Quelle auswählen'
  trigger:
  - entity_id: input_select.avr_source
    platform: state
  condition:
  - condition: template
    value_template: '{{ states.input_select.avr_source.state != "--" }}'
  action:
  - data_template:
      entity_id: media_player.harman_kardon_avr
      source: '{% if states.input_select.avr_source.state == "Telekom" %}STB {% elif
        states.input_select.avr_source.state ==  "AirPlay" %}Audio {% elif states.input_select.avr_source.state
        ==  "TV" %}TV {% elif states.input_select.avr_source.state ==  "Home Network"
        %}Home Network {% elif states.input_select.avr_source.state ==  "vTuner" %}vTuner
        {% elif states.input_select.avr_source.state ==  "Turntable" %}AUX {% endif
        %}'
    service: media_player.select_source
  - data:
      entity_id: input_select.avr_source
      option: --
    service: input_select.select_option
  mode: single
- id: '1533660030341'
  alias: 'Harman Kardon AVR: verbinden'
  trigger:
  - entity_id: device_tracker.avr151
    platform: state
    to: home
  condition: []
  action:
  - delay: 00:02:00
  - data:
      entity_id: media_player.harman_kardon_avr
    service: media_player.volume_down
- id: '1533984172028'
  alias: 'Xiaomi Staubsauger: Stoppen nach Push'
  trigger:
  - event_data:
      actionName: STOP_VACUUM
    event_type: ios.notification_action_fired
    platform: event
  condition: []
  action:
  - data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
    service: vacuum.return_to_base
- id: '1540494970737'
  alias: 'Benachrichtigung: Bewegung erkannt'
  trigger:
  - entity_id: binary_sensor.bewegungsmelder
    platform: state
    to: 'on'
  condition: []
  action:
  - delay: 00:01:00
  - condition: state
    entity_id: sensor.presence
    state: not_home
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: Bewegung erkannt
      notification_id: alert
      title: Bewegungsmelder
    service: script.notify_script
  initial_state: false
  mode: single
- id: '1540974552306'
  alias: 'Benachrichtigung: Luftfeuchtigkeit'
  trigger:
  - above: '45'
    entity_id: sensor.humidity_158d0001b8c96c
    platform: numeric_state
  - above: '45'
    entity_id: sensor.humidity_158d0001b8c998
    platform: numeric_state
  - above: '45'
    entity_id: sensor.humidity_158d0002239fb5
    platform: numeric_state
  condition:
  - condition: state
    entity_id: person.wolfgang
    state: home
  action:
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'Luftfeuchtigkeit zu hoch - Schlafzimmer: {{ states.sensor.humidity_158d0001b8c96c.state
        }} % - Wohnzimmer {{ states.sensor.humidity_158d0001b8c998.state }} % - Küche:
        {{ states.sensor.humidity_158d0002239fb5.state }} % '
      notification_id: Luftfeuchtigkeit
      title: Luftfeuchtigkeit
    service: script.notify_script
  mode: single
- id: '1541096569503'
  alias: Bewegungsmelder - Alarm
  initial_state: false
  trigger:
  - entity_id: binary_sensor.bewegungsmelder
    platform: state
    to: 'on'
  condition:
  - after: '23:30:00'
    before: 05:00:00
    condition: time
  action:
  - data:
      gw_mac: 7811DCB258D1
      ringtone_id: 0
      ringtone_vol: 20
    service: xiaomi_aqara.play_ringtone
  - delay: 00:02:00
  - data: {}
    service: script.xiaomi_gateway_alarm_stop
- id: '1542650541048'
  alias: 'Xiaomi Staubsauger: Benachrichtigung Sensor kritisch'
  trigger:
  - below: '4'
    entity_id: sensor.xiaomi_vacuum_sensor_dirty_left
    platform: numeric_state
  condition: []
  action:
  - data:
      message: 'Sensor reinigen: {{ states.sensor.xiaomi_vacuum_sensor_dirty_left.state
        }} h übrig'
      notification_id: xiaomi_sensor
      title: Xiaomi StaubRobo
    service: persistent_notification.create
  mode: single
- id: '1542974689604'
  alias: Anwesenheitsschaltung
  description: Deaktiviert den Bewegungssensor
  trigger:
  - entity_id: sensor.presence
    platform: state
    to: home
  condition: []
  action:
  - data:
      entity_id: automation.benachrichtigung_bewegung_erkannt
    service: automation.turn_off
- id: '1543619209115'
  alias: 'Startup: Restart Services'
  trigger:
  - event: start
    platform: homeassistant
  condition: []
  action:
  - data:
      entity_id: sensor.car_km_usage
    service: homeassistant.update_entity
  - service: homeassistant.update_entity
    data:
      entity_id: sensor.hacs
  - service: hassio.addon_stdin
    data:
      addon: 15d21743_samba_backup
      input: restore-sensor
  - delay: 00:01:30
  - service: homekit.start
  mode: single
- id: '1544816542688'
  alias: 'Xiaomi Staubsauger: Error stop'
  trigger:
  - entity_id: sensor.xiaomi_vacuum_status
    platform: state
    to: Error
  condition: []
  action:
  - data:
      entity_id: automation.xiaomi_staubsauger_taglich_saugen
    service: automation.turn_off
  - data:
      message: Automatisierungen deaktiviert
      notification_id: xiaomi_sensor
      title: Xiaomi StaubRobo
    service: persistent_notification.create
- id: '1548418632803'
  alias: 'Xiaomi Staubsauger: Zähler zurücksetzen'
  trigger:
  - entity_id: vacuum.xiaomi_vacuum_cleaner
    from: docked
    platform: state
    to: cleaning
  condition: []
  action:
  - data:
      entity_id: counter.xiaomo_errors
    service: counter.reset
- id: '1550439793222'
  alias: 'Xiaomi Staubsauger: Abwesenheit'
  trigger:
  - entity_id: sensor.presence
    platform: state
    to: not_home
  condition:
  - condition: state
    entity_id: vacuum.xiaomi_vacuum_cleaner
    state: docked
  - after: 07:00
    before: '18:00'
    condition: time
  action:
  - data_template:
      data:
        push:
          category: vacuum_trigger
          thread-id: vacuum_start
      message: Staubsauger starten?
    service: notify.mobile_app_iphone11pro
- id: '1550439982602'
  alias: 'Xiaomi Staubsauger: Starten nach Push'
  trigger:
  - event_data:
      actionName: TRIGGER_VACUUM
    event_type: ios.notification_action_fired
    platform: event
  condition: []
  action:
  - data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
    service: vacuum.start
  - data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
      fan_speed: Turbo
    service: vacuum.set_fan_speed
- id: '1554536389566'
  alias: 'Sonos: stoppen'
  trigger:
  - entity_id: person.wolfgang
    from: home
    platform: state
  condition: []
  action:
  - data: {}
    service: script.sonos_stopp
- id: '1563024961089'
  alias: 'Xiaomi Staubsauger: Hauptbürste wechseln'
  trigger:
  - below: 3
    entity_id: sensor.xiaomi_vacuum_main_brush_left
    platform: numeric_state
  condition: []
  action:
  - data:
      message: 'Hauptbürste reinigen: {{ states.sensor.xiaomi_vacuum_main_brush_left.state
        }} h übrig'
      notification_id: xiaomi_brush
      title: Xiaomi StaubRobo Hauptbürste
    service: persistent_notification.create
- id: '1564908105933'
  alias: 'Benachrichtigung: RAM zu hoch'
  trigger:
  - above: 80
    entity_id: sensor.memory_use_percent
    platform: numeric_state
  condition: []
  action:
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'RAM Auslastung zu hoch: {{ states.sensor.memory_use_percent.state
        }} % '
      notification_id: pi
      title: Raspi
    service: script.notify_script
  mode: single
- id: '1568628137654'
  alias: 'Xiaomi Staubsauger: Benachrichtigung Filter kritisch'
  trigger:
  - below: '2'
    entity_id: sensor.xiaomi_vacuum_filter_left
    platform: numeric_state
  condition: []
  action:
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'Filter wechseln: {{ states.sensor.xiaomi_vacuum_filter_left.state
        }} h übrig'
      notification_id: xiaomi_filter
      title: Xiaomi StaubRobo
    service: script.notify_script
  mode: single
- id: '1570440017469'
  alias: 'Benachrichtigung: Badge zurücksetzen'
  trigger:
  - event_data:
      sourceDeviceID: iphone11pro
    event_type: ios.became_active
    platform: event
  condition: []
  action:
  - service: script.notify_clean_badge
  mode: single
- id: '1571050762220'
  alias: 'Xiaomi Staubsauger: Fehler Hinweis'
  trigger:
  - entity_id: sensor.presence
    platform: state
    to: home
    for: 00:02:00
  condition:
  - condition: state
    entity_id: vacuum.xiaomi_vacuum_cleaner
    state: error
  action:
  - data:
      entity_id: vacuum.xiaomi_vacuum_cleaner
    service: vacuum.locate
  mode: single
- id: '1574071080398'
  alias: 'Entertainment: Steckdosenleiste ausschalten'
  description: ''
  trigger:
  - at: 00:01:00
    platform: time
  - platform: state
    entity_id: remote.harmony_hub
    to: 'off'
  condition:
  - condition: state
    entity_id: remote.harmony_hub
    state: 'off'
  action:
  - delay: 00:01:00
  - data:
      entity_id: switch.steckdosenleiste
    service: switch.turn_off
  mode: single
- id: '1578168461545'
  alias: 'Benachrichtigung: Snapshot Fehler'
  trigger:
  - platform: state
    entity_id: sensor.samba_backup
    attribute: total_backups_failed
    from: '0'
  action:
  - service: persistent_notification.create
    data_template:
      title: Snapshot Fehler
      message: 'Name: {{ trigger.event.data.name }}

        Error: {{ trigger.event.data.error }}'
  mode: single
- id: '1584265149079'
  alias: 'Benachrichtigung: CPU Temp zu hoch'
  description: ''
  trigger:
  - above: 80
    entity_id: sensor.cpu_temperature
    for: 00:10:00
    platform: numeric_state
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'CPU Temp zu hoch: {{ states ( "sensor.cpu_temperature" ) }}°'
      notification_id: cpu_temp
      title: CPU Temp
    service: script.notify_script
- id: '1584612970522'
  alias: 'FritzBox: Tefelonanruf'
  description: ''
  trigger:
  - entity_id: sensor.fritzbox
    platform: state
    to: ringing
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'Anruf von: {{ state_attr("sensor.fritzbox", "from") }}'
      notification_id: Anruf
      title: Anruf
    service: script.notify_script
- id: '1568628137987'
  alias: 'Benachrichtigung: KM Stand kritisch'
  trigger:
  - entity_id: sensor.car_km_usage
    platform: state
  condition:
  - above: '99'
    condition: numeric_state
    entity_id: sensor.car_km_usage
  action:
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'KM Stand kritisch: {{ states ( "sensor.x1_sdrive18i_mileage" ) }}
        von {{ states ( "sensor.car_km_threshold" )}}'
      notification_id: car
      title: BMW KM Stand
    service: script.notify_script
  - data:
      entity_id: automation.km_stand_kritisch
    service: automation.turn_off
  mode: single
- id: '1571298248677'
  alias: 'Auto: Sensoren aktualisieren'
  trigger:
  - at: 01:00:00
    platform: time
  condition: []
  action:
  - data:
      entity_id: sensor.car_days_in_use
    service: homeassistant.update_entity
  - data:
      entity_id: sensor.car_km_threshold
    service: homeassistant.update_entity
  - data:
      entity_id: sensor.car_km_usage
    service: homeassistant.update_entity
- id: '1603141534875'
  alias: Nachtlicht
  description: ''
  trigger:
  - platform: device
    type: turned_on
    device_id: 9c9d0c210c7d11eba05f8b9968791799
    entity_id: light.yeelight_bslamp1_0x0000000005451cd6
    domain: light
  condition: []
  action:
  - scene: scene.nachtlicht_hell
  mode: single
- id: '1604680008982'
  alias: 'Schreibtisch: Steckdose ausschalten'
  description: ''
  trigger:
  - platform: state
    entity_id: device_tracker.hp_spectre
    to: not_home
    for: 00:05:00
  condition: []
  action:
  - type: turn_off
    device_id: 5e5ebc553b224502b92ae3970e64ef32
    entity_id: switch.wifi_steckdose
    domain: switch
  mode: single
- id: '1604932069752'
  alias: 'Benachrichtigung: Wohnungstür offen'
  description: ''
  trigger:
  - platform: state
    to: 'on'
    entity_id: binary_sensor.fenster_turkontaktsensor
  condition: []
  action:
  - delay: 00:01:00
  - condition: state
    state: not_home
    entity_id: person.wolfgang
  - data:
      entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: Wohnungstür geöffnet
      notification_id: alert
      title: Bewegungsmelder
    service: script.notify_script
  mode: restart
- id: '1605645794887'
  alias: 'iOS: Schlafenszeit'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: gotobed
  condition: []
  action:
  - service: script.schlafen
    data: {}
  - service: script.sonos_set_volume_8
    data: {}
  - service: script.sonos_radio_b5_aktuell
    data: {}
  mode: single
- id: '1605647273709'
  alias: 'iOS: Aufwachen'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: wakeup
  condition: []
  action:
  - service: light.turn_on
    data: {}
    entity_id: light.yeelight_bslamp1_0x0000000005451cd6
  - service: script.sonos_wecker
    data: {}
  mode: single
- id: '1584265149080'
  alias: 'Benachrichtigung: CPU Auslastung zu hoch'
  description: ''
  trigger:
  - above: 50
    for: 00:10:00
    platform: numeric_state
    entity_id: sensor.processor_use
  condition: []
  action:
  - data: {}
    entity_id: input_boolean.persistent_notification
    service: input_boolean.turn_on
  - data:
      message: 'CPU Auslastung zu hoch: {{ states ( "sensor.processor_use" ) }}%'
      notification_id: cpu
      title: CPU Auslastung
    service: script.notify_script
  mode: single
- id: '1607432908571'
  alias: 'Entertainment: Steckdosenleiste einschalten'
  description: ''
  trigger:
  - platform: state
    entity_id: remote.harmony_hub
    from: 'off'
  condition: []
  action:
  - type: turn_on
    device_id: bb881aa6bf2611acde09720184bbf7af
    entity_id: switch.steckdosenleiste
    domain: switch
  mode: single
- id: '1610484235278'
  alias: 'iOS: Schlafen'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: sleep
  condition: []
  action:
  - service: script.alles_ausschalten
    data: {}
  mode: single
- id: '1610907140746'
  alias: 'Harmony: Airplay - Telekom'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.remote_state
    to: AirPlay
  condition: []
  action:
  - delay: 00:10:00
  - condition: state
    entity_id: sensor.remote_state
    state: AirPlay
  - service: switch.turn_off
    data: {}
    entity_id: switch.telekom_mr_401
  mode: single
- id: '1610972882769'
  alias: 'Sonos: Wohnzimmer'
  description: ''
  trigger:
  - device_id: ca5c7f2d9583f824073381bc650902cd
    domain: deconz
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  condition: []
  action:
  - service: media_player.media_play_pause
    data: {}
    entity_id: media_player.wohnzimmer
  mode: single
- id: '1610972932012'
  alias: 'Schreibtisch: Arbeiten'
  description: ''
  trigger:
  - device_id: a955261a32066a37020dbc5ffa64788c
    domain: deconz
    platform: device
    type: remote_button_short_press
    subtype: turn_on
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    entity_id: scene.arbeit
  mode: single
- id: '1611326546621'
  alias: 'Schreibtisch: Steckdose einschalten'
  description: ''
  trigger:
  - platform: state
    entity_id: device_tracker.hp_spectre
    to: home
  condition: []
  action:
  - type: turn_on
    device_id: 5e5ebc553b224502b92ae3970e64ef32
    entity_id: switch.wifi_steckdose
    domain: switch
  mode: single
- id: '1611921643478'
  alias: 'Sonos: Lautstärke anpassen'
  description: ''
  trigger:
  - platform: state
    entity_id: media_player.wohnzimmer
    attribute: volume_level
  - platform: state
    entity_id: media_player.schlafzimmer
    attribute: volume_level
  - platform: state
    entity_id: media_player.bad
    attribute: volume_level
  condition:
  - condition: state
    entity_id: input_boolean.sync_volume
    state: 'on'
  action:
  - service: media_player.volume_set
    data:
      entity_id: '{{ trigger.to_state.attributes.sonos_group }}'
      volume_level: '{{ trigger.to_state.attributes.volume_level }}'
  mode: queued
  max: 10
- id: '1612343173377'
  alias: 'iOS: Telefonat'
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionName: phonecall
  condition: []
  action:
  - service: script.sonos_stopp
    data: {}
  mode: single
