########################################################################################################
#                                                                                                      #
#                                              Design                                                  #
#                                                                                                      #
########################################################################################################

  icon_info_bg:
    color: var(--google-grey)
    show_icon: true
    show_name: true
    show_label: true
    size: 24px
    custom_fields:
      notification: >
        [[[
          if (entity.state =='unavailable'){
            return `<ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon>`
          }
        ]]]
    state:
      - styles:
          custom_fields:
            notification:
              - border-radius: 50%
              - position: absolute
              - left: 38px
              - top: 8px
              - height: 16px
              - width: 16px
              - border: 2px solid var(--card-background-color)
              - font-size: 12px
              - line-height: 14px
              - background-color: >
                  [[[
                    return "rgba(var(--color-red),1)";
                  ]]]
        value: unavailable
    styles:
      card:
        - padding: 15px
        - border-radius: var(--border-radius)
        - box-shadow: var(--box-shadow)
      grid:
        - grid-template-areas: '"i n" "i l"'
        - grid-template-columns: min-content auto
        - grid-template-rows: min-content min-content
      icon:
        - color: 'rgba(var(--color-theme),1)'
      img_cell:
        # - background-color: 'rgba(var(--color-theme),0.2)'
        - border-radius: 50%
        - place-self: center
        - width: 42px
        - height: 42px
      name:
        - align-self: end
        - justify-self: start
        - font-size: 14px
        - margin-left: 10px
      label:
        - justify-self: start
        - align-self: start
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 10px
      state:
        - justify-self: start
        - align-self: start
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 10px


########################################################################################################
#                                                                                                      #
#                                              Generic                                                 #
#                                                                                                      #
########################################################################################################

  generic:
    label: >
        [[[return entity.state + " " + entity.attributes.unit_of_measurement]]]
    styles:
      icon:
        - color: 'rgba(var(--color-theme),0.9)'
      grid:
        - grid-template-areas: '"i l" "i n"'
        - grid-template-columns: min-content auto
        - grid-template-rows: min-content min-content
      label:
        - align-self: end
        - justify-self: start
        - font-size: 14px
        - margin-left: 12px
        - filter: opacity(100%)
      name:
        - justify-self: start
        - align-self: start
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 12px

########################################################################################################

  generic_no_unit:
    label: >
        [[[return entity.state]]]
    template: 
      - blue

########################################################################################################

  generic_no_label:
    label: AusfÃ¼hren
    template: 
      - blue

  generic_with_state:
    label: >-
      [[[ 
          var state = entity.state;
          if (entity.state =='on')
            var state = "An";
          else if (entity.state =='off')
            var state = "Aus";
          
          return state ; 
      ]]]
    template: 
      - yellow

########################################################################################################
#                                                                                                      #
#                                              LIGHT                                                   #
#                                                                                                      #
########################################################################################################

  light:
    tap_action:
      action: toggle
    hold_action:
      action: more-info
    label: >-
      [[[ if (entity.state !='unavailable'){
            if (entity.state =='off'){
              var bri = Math.round(entity.attributes.brightness / 2.55);
              return 'Aus';  
            }else{
              var bri = Math.round(entity.attributes.brightness / 2.55);
              return (bri ? bri : '0') + '%'; 
            }
          }else{
            return "Nicht verfÃ¼gbar";
          }
      ]]]
    template: 
      - yellow
  
########################################################################################################

  light_no_state:
    tap_action:
      action: toggle
    hold_action:
      action: more-info
    label: >-
      [[[ 
          var state = entity.state;
          if (entity.state =='on')
            var state = "An";
          else if (entity.state =='off')
            var state = "Aus";
          
          return state ; 
      ]]]
    template: 
      - yellow

########################################################################################################
#                                                                                                      #
#                                             OUTLET                                                   #
#                                                                                                      #
########################################################################################################

  outlet:
    tap_action:
      action: toggle
    label: |-
      [[[ if (entity.state =='on')
         var etat = "An";
         else
        var etat = "Aus";
      return etat ; ]]]
    template: 
      - blue


####################################################
#                                                  #
#                     GRAPHE                       #
#                                                  #
####################################################

  graph:
    variables:
      entity: "sensor.sensor"
      color: "var(--info-color)"
      name: "Default name"
    styles:
      card:
        - border-radius: var(--border-radius)
        - box-shadow: var(--box-shadow)
        - padding: 0px
      grid:
        - grid-template-areas: '"item1" "item2"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content  min-content
    custom_fields:
      item1:
        card:
          entity: '[[[ return variables.entity ]]]'
          name: '[[[ return variables.name ]]]'
          template: 
            - icon_info_bg
            - generic
          styles:
            card:
              - padding: 12px
          type: 'custom:button-card'
      item2:
        card:
          type: 'custom:mini-graph-card'
          entities:
            - entity: '[[[ return variables.entity ]]]'
          line_color: '[[[ return variables.color ]]]'
          show:
            name: false
            icon: false
            legend: false
            state: false
          style: |
            ha-card {
              box-shadow: none;
            }

########################################################################################################
#                                                                                                      #
#                                              MEDIA                                                   #
#                                                                                                      #
########################################################################################################
  media:
    variables:
      name: "name"
    name: >
            [[[
              return variables.name;
            ]]]
    label: >-
      [[[ if (entity.state =='paused'){
            return "Aus";
          }else{
            return entity.state;
          }
      ]]]
    icon: |
      [[[
          var icon = 'mdi:speaker';
          return icon ;
      ]]]
    styles:
      label:
        - opacity: '0.6'
      icon:
        - color: 'rgba(var(--color-theme),1)'
      img_cell:
        # - background-color: 'rgba(var(--color-theme),0.05)'
        - border-radius: 50%
        - place-self: center
        - width: 42px
        - height: 42px
        # - margin-left: 4px
      card:
        - padding: 15px
        # - background-blend-mode: multiply
        # - background: >
        #     [[[
        #       var image = entity.attributes.entity_picture;
        #       var bg = entity.attributes.entity_picture;
        #       if (image == null || entity.state =='paused'){
        #         var bg = '';
        #       } else{
        #         var bg = 'center / cover url(' + image + ') rgba(0, 0, 0, 0.15)';
        #       }
        #       return bg;
        #     ]]]
    state:
      - operator: template
        value: >
          [[[
            return entity.state !='paused'
          ]]]
        name: >
            [[[
              return variables.name;
            ]]]
        label: >
            [[[
              var label = entity.attributes.media_album_name;
              var title = entity.attributes.media_title;
              if (label == null){
                var label = entity.attributes.source;
              } else {
                var label = label + ": " + title;
              }
              return label;
            ]]]
        styles:
          # label: 
          #   - color: white
          #   - filter: opacity(100%)
          img_cell:
            - background-color: 'rgba(var(--color-theme),0.2)'
          icon:
              - color: 'rgba(var(--color-theme),1)'
          # name:
          #   - color: white


####################################################
#                                                  #
#                      COLORS                      #
#                                                  #
####################################################

  yellow:
    state:
      - styles:
          icon:
            - color: 'rgba(var(--color-yellow),1)'
          img_cell:
            - background-color: 'rgba(var(--color-yellow), 0.2)'
          card:
            # - background-color: 'rgba(var(--color-background-yellow),var(--opacity-bg))'
          name:
            - color: 'rgba(var(--color-yellow-text),1)'
          label:
            - color: 'rgba(var(--color-yellow-text),1)'
        value: 'on'

  ########################################################################################################

  blue:
    state:
      - styles:
          icon:
            - color: 'rgba(var(--color-blue),1)'
          img_cell:
            - background-color: 'rgba(var(--color-blue), 0.2)'
          card:
            # - background-color: 'rgba(var(--color-background-blue), var(--opacity-bg))'
          name:
            - color: 'rgba(var(--color-blue-text),1)'
          label:
            - color: 'rgba(var(--color-blue-text),1)'
        value: 'on'

########################################################################################################
#                                                                                                      #
#                                             TITLE                                                    #
#                                                                                                      #
########################################################################################################

  title:
    tap_action:
      action: none
    hold_action:
      action:
    show_icon: false
    show_label: true
    show_name: true
    styles:
      card:
        - background-color: rgba(0,0,0,0)
        - box-shadow: none
        - height: auto
        - width: auto
        - margin-left: 12px
      grid:
        - grid-template-areas: '"n" "l"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content min-content
      name:
        - justify-self: start
        # - font-weight: bold
        # - font-size: '1rem'
      label:
        - justify-self: start
        # - font-weight: bold
        - font-size: '1rem'
        - opacity: '0.4'

########################################################################################################
#                                                                                                      #
#                                 SPECIAL TEMPLATES                                                    #
#                                                                                                      #
########################################################################################################
  remote:
    label: >
        [[[return states['sensor.remote_state'].state]]]

  coffee_plug:
    custom_fields:
      notification: >
        [[[
          if (states['input_boolean.kaffeemaschine_steckdose'].state == 'on'){
            return `<ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon>`
          }
        ]]]
    styles:
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 38px
          - top: 8px
          - height: 16px
          - width: 16px
          - border: 2px solid var(--card-background-color)
          - font-size: 12px
          - line-height: 14px
          - background-color: >
              [[[
                return "rgba(var(--color-red),1)";
              ]]]