########################################################################################################
#                                                                                                      #
#                                              Design                                                  #
#                                                                                                      #
########################################################################################################

  standard_style:
    styles:
      card:
        - padding: var(--button-padding)
        - border-radius: var(--border-radius)
        - box-shadow: var(--button-box-shadow)
      grid:
        - grid-template-areas: '"i n"'
        - grid-template-columns: min-content auto
        - grid-template-rows: 1fr
      name:
        - font-size: 14px
        - margin-left: 5px
        - justify-self: start
        - align-self: center
      icon:
        - color: 'rgba(var(--color-theme),1)'
      img_cell:
        # - background-color: 'rgba(var(--color-theme),0.2)'
        - border-radius: 50%
        - place-self: center
        - width: 40px
        - height: 40px

########################################################################################################

  icon_info_bg:
    # color: var(--google-grey)
    show_icon: true
    show_name: true
    show_label: true
    size: 24px
    custom_fields:
      notification: >
        [[[
          if (entity.state =='unavailable'){
            return `<ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon>`
          }
        ]]]
    state:
      - styles:
          custom_fields:
            notification:
              - border-radius: 50%
              - position: absolute
              - left: 33px
              - top: 8px
              - height: 16px
              - width: 16px
              - border: 2px solid var(--card-background-color)
              - font-size: 12px
              - line-height: 14px
              - background-color: >
                  [[[
                    return "rgba(var(--color-red),1)";
                  ]]]
        value: unavailable
    styles:
      card:
        - padding: var(--button-padding)
        - border-radius: var(--border-radius)
        - box-shadow: var(--button-box-shadow)
      grid:
        - grid-template-areas: '"i n" "i l"'
        - grid-template-columns: min-content auto
        - grid-template-rows: min-content min-content
      icon:
        - color: 'rgba(var(--color-theme),1)'
      img_cell:
        - border-radius: 50%
        - place-self: center
        - width: 40px
        - height: 40px
      name:
        - align-self: end
        - justify-self: start
        - font-size: 14px
        - margin-left: 5px
      label:
        - justify-self: start
        - align-self: start
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 5px

#-------------------------------------------------

  icon_info_no_button:
    styles:
      card:
        - padding: 0px
        - border-radius: 0
        - box-shadow: 0
      name:
        - margin-left: 16px
      label:
        - margin-left: 16px
    template: 
      - icon_info_bg

########################################################################################################
#                                                                                                      #
#                                              Generic                                                 #
#                                                                                                      #
########################################################################################################

  generic:
    label: >
        [[[return entity.state + " " + entity.attributes.unit_of_measurement]]]
    styles:
      icon:
        - color: 'rgba(var(--color-theme),0.9)'
      grid:
        - grid-template-areas: '"i l" "i n"'
        - grid-template-columns: min-content auto
        - grid-template-rows: min-content min-content
      label:
        - align-self: end
        - justify-self: start
        - font-size: 14px
        - margin-left: 12px
        - filter: opacity(100%)
      name:
        - justify-self: start
        - align-self: start
        - font-size: 12px
        - filter: opacity(40%)
        - margin-left: 12px

########################################################################################################

  generic_no_unit:
    label: >
        [[[return entity.state]]]
    template: 
      - blue

########################################################################################################

  generic_no_label:
    label: AusfÃ¼hren
    template: 
      - blue

#-------------------------------------------------

  generic_with_state:
    label: >-
      [[[ 
          var state = entity.state;
          if (entity.state =='on')
            var state = "An";
          else if (entity.state =='off')
            var state = "Aus";
          
          return state ; 
      ]]]
    template: 
      - yellow

########################################################################################################
#                                                                                                      #
#                                              LIGHT                                                   #
#                                                                                                      #
########################################################################################################

  light:
    show_icon: true
    show_name: true
    show_label: false
    layout: icon_name
    tap_action:
      action: toggle
    hold_action:
      action: more-info
    template: 
      - yellow
      - standard_style

########################################################################################################
#                                                                                                      #
#                                             OUTLET                                                   #
#                                                                                                      #
########################################################################################################

  outlet_with_confirmation:
    tap_action:
      action: toggle 
      confirmation: |
          [[[
            return entity.state === "on"
            ? {"text": 'Soll die Steckdose ausgeschaltet werden?' } : null
          ]]]
    template: 
      - outlet

#-------------------------------------------------

  outlet:
    show_icon: true
    show_name: true
    show_label: false
    layout: icon_name
    tap_action:
      action: toggle 
    template: 
      - blue
      - standard_style

####################################################
#                                                  #
#                     GRAPH                        #
#                                                  #
####################################################

  graph:
    variables:
      entity: "sensor.sensor"
      color: "var(--info-color)"
      name: "Default name"
    styles:
      card:
        - border-radius: var(--border-radius)
        - box-shadow: 0
        - padding: 0px
      grid:
        - grid-template-areas: '"item1" "item2"'
        - grid-template-columns: 1fr
        - grid-template-rows: min-content  min-content
    custom_fields:
      item1:
        card:
          entity: '[[[ return variables.entity ]]]'
          name: '[[[ return variables.name ]]]'
          template: 
            - icon_info_bg
            - generic
          styles:
            card:
              - padding: var(--button-padding)
              - padding-left: 15px
              - border-radius: 0
              - box-shadow: none
            icon:
              - color: 'rgba(var(--color-theme),1)'
            name:
              - margin-left: 17px
            label:
              - margin-left: 17px
          type: 'custom:button-card'
      item2:
        card:
          type: 'custom:mini-graph-card'
          entities:
            - entity: '[[[ return variables.entity ]]]'
          line_color: '[[[ return variables.color ]]]'
          show:
            name: false
            icon: false
            legend: false
            state: false
          style: |
            ha-card {
              box-shadow: none;
              border-radius: var(--border-radius);
              padding: var(--button-padding);
            }

########################################################################################################
#                                                                                                      #
#                                              MEDIA                                                   #
#                                                                                                      #
########################################################################################################
  media:
    variables:
      name: "name"
    name: >
            [[[
              return variables.name;
            ]]]
    label: >-
      [[[ if (entity.state =='paused'){
            return "Aus";
          }else{
            return entity.state;
          }
      ]]]
    icon: |
      [[[
          var icon = 'mdi:speaker';
          return icon ;
      ]]]
    styles:
      label:
        - opacity: '0.6'
      icon:
        - color: 'rgba(var(--color-theme),1)'
      img_cell:
        - border-radius: 50%
        - place-self: center
        - width: 42px
        - height: 42px
      card:
        - padding: var(--button-padding)
    state:
      - operator: template
        value: >
          [[[
            return entity.state !='paused'
          ]]]
        name: >
            [[[
              return variables.name;
            ]]]
        label: >
            [[[
              var label = entity.attributes.media_album_name;
              var title = entity.attributes.media_title;
              if (label == null){
                var label = entity.attributes.source;
                if (entity.attributes.source == null) {
                  var label = title;
                }
              } else {
                var label = label + ": " + title;
              }
              return label;
            ]]]
        styles:
          img_cell:
            - background-color: 'rgba(var(--color-theme),0.2)'
          icon:
            - color: 'rgba(var(--color-theme),1)'

########################################################################################################
#                                                                                                      #
#                      COLORS                                                                          #
#                                                                                                      #
########################################################################################################

  yellow:
    state:
      - styles:
          icon:
            - color: 'rgba(var(--color-yellow),1)'
          img_cell:
            - background-color: 'rgba(var(--color-yellow), 0.2)'
          card:
            # - background-color: 'rgba(var(--color-background-yellow),var(--opacity-bg))'
          name:
            - color: 'rgba(var(--color-yellow-text),1)'
          label:
            - color: 'rgba(var(--color-yellow-text),1)'
        value: 'on'

#-------------------------------------------------

  blue:
    state:
      - styles:
          icon:
            - color: 'rgba(var(--color-blue),1)'
          img_cell:
            - background-color: 'rgba(var(--color-blue), 0.2)'
          name:
            - color: 'rgba(var(--color-blue-text),1)'
          label:
            - color: 'rgba(var(--color-blue-text),1)'
        value: 'on'

########################################################################################################
#                                                                                                      #
#                                             BLANK                                                    #
#                                                                                                      #
########################################################################################################

  blank:
    tap_action:
      action: none
    hold_action:
      action: none
    show_icon: false
    show_label: false
    show_name: false
    styles:
      card:
        - background-color: rgba(0,0,0,0)
        - box-shadow: none
        - height: 5px
        - width: 5px
        - padding: 0

#-------------------------------------------------

  blank_popup:
    tap_action:
      action: none
    hold_action:
      action: none
    show_icon: false
    show_label: false
    show_name: false
    styles:
      card:
        - background-color: rgba(0,0,0,0)
        - box-shadow: none
        - height: 15px
        - width: 5px
        - padding: 0

########################################################################################################
#                                                                                                      #
#                                 SPECIAL TEMPLATES                                                    #
#                                                                                                      #
########################################################################################################
  remote:
    label: >
        [[[return states['sensor.remote_state'].state]]]

  coffee_plug:
    custom_fields:
      notification_coffee: >
        [[[
          if (states['input_boolean.kaffeemaschine_steckdose'].state == 'on' ){
            return `<ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon>`
          }
        ]]]
    styles:
      custom_fields:
        notification_coffee:
          - border-radius: 50%
          - position: absolute
          - left: 33px
          - top: 8px
          - height: 16px
          - width: 16px
          - border: 2px solid var(--card-background-color)
          - font-size: 12px
          - line-height: 14px
          - background-color: >
              [[[
                return "rgba(var(--color-red),1)";
              ]]]

#-------------------------------------------------

  vacuum:
    custom_fields:
      notification: >
        [[[
          if (states['vacuum.roborock_vacuum'].state == 'error' || states['vacuum.roborock_vacuum'].state == 'unavailable'){
            return `<ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon>`
          }
        ]]]
    styles:
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 33px
          - top: 8px
          - height: 16px
          - width: 16px
          - border: 2px solid var(--card-background-color)
          - font-size: 12px
          - line-height: 14px
          - background-color: >
              [[[
                return "rgba(var(--color-red),1)";
              ]]]

####################################################
#                                                  #
#                      EDGE                        #
#                                                  #
####################################################

  edge:
    styles:
      card:
        - width: 0px

####################################################
#                                                  #
#                      Script                      #
#                                                  #
####################################################
  script:
    variables:
      entity: "entity to trigger"
    color: var(--google-grey)
    show_icon: true
    show_name: true
    show_label: false
    size: 24px
    layout: icon_name
    tap_action:
      action: call-service
      service: script.turn_on
      service_data:
        entity_id: '[[[ return variables.entity ]]]'
    double_tap_action:
      action: none
    hold_action:  
      action: none
    template:
      - standard_style
    styles:
      img_cell:
        - margin-left: 8px
      name:
        - font-size: 14px
        - margin-left: 12px
        - justify-self: start

#-------------------------------------------------

  button:
    show_icon: true
    show_name: true
    show_label: false
    size: 24px
    layout: icon_name
    styles:
      grid:
        - grid-template-areas: '"i n"'
        - grid-template-columns: min-content auto
        - grid-template-rows: 1fr
      card:
        - padding-left: 35px 
      img_cell:
        - border-radius: 50%
        - place-self: center
        - width: 28px
        - height: 28px
        - margin-left: 8px
      name:
        - font-size: 14px
        - margin-left: 12px
        - justify-self: start
    state:
      - styles:
          icon:
            - color: 'rgba(var(--color-yellow),1)'
          name:
            - color: 'rgba(var(--color-yellow-text),1)'
          label:
            - color: 'rgba(var(--color-yellow-text),1)'
        value: 'on'

#-------------------------------------------------

  scene:
    size: 20px
    show_label: true
    label: |
      [[[ return (entity.attributes.value )]]]
    styles:
      card:
        - border-radius: var(--border-radius)
        - box-shadow: var(--box-shadow)
        - padding: 10px 0px 8px 0px 
      grid:
        - grid-template-areas: '"i" "n" "l"'
      name:
        - margin-top: 10px
        - justify-self: center
        - font-weight: bold
        - font-size: 14px
      label:
        - justify-self: center
        - align-self: start
        - font-weight: bolder
        - font-size: 12px
        - filter: opacity(40%)
      icon:
        - color: 'rgba(var(--color-theme),0.2)'
      img_cell:
        - background-color: 'rgba(var(--color-theme),0.05)'
        - border-radius: 50%
        - place-self: center
        - width: 42px
        - height: 42px

#-------------------------------------------------

  icon_info_alert:
    color: 'var(--google-grey)'
    show_icon: true
    show_label: false
    show_name: true
    tap_action:
      action: toggle 
      confirmation: |
          [[[
            return entity.state === "on"
            ? {"text": 'Soll die Warnung ausgeschaltet werden?' } : null
          ]]]
    state:
      - operator: template
        value: "[[[ if (entity.state == 'unavailable' || entity.state == 'on'){ return true; } ]]]"
        styles:
          icon:
            - color: rgba(var(--color-blue),1)
          label:
            - color: rgba(var(--color-blue-text),1)
          name:
            - color: rgba(var(--color-red),1)
          img_cell:
            - background-color: rgba(var(--color-blue), 0.2)
          custom_fields:
            notification:
              - border-radius: 50%
              - position: absolute
              - left: 33px
              - top: 8px
              - height: 16px
              - width: 16px
              - border: 2px solid var(--card-background-color)
              - font-size: 12px
              - line-height: 14px
              - background-color: >
                  [[[
                    return "rgba(var(--color-red),1)";
                  ]]]
    custom_fields:
      notification: >
        [[[
          if (entity.state =="unavailable" || entity.state == "on"){
            return `<ha-icon icon="mdi:exclamation" style="width: 12px; height: 12px; color: var(--primary-background-color);"></ha-icon>`
          }
        ]]]
    size: "24px"
    template: 
      - standard_style

  chips:
    tap_action:
      action: more-info
    show_icon: true
    show_name: true
    show_state: true
    show_label: true
    size: 80%
    styles:
      img_cell:
        - width: 24px
      card:
        - border-radius: 18px
        - box-shadow: var(--box-shadow)
        - height: 36px
        - width: auto
        - padding-left: 6px
        - padding-right: 6px
      grid:
        - grid-template-areas: '"l"'
      label:
        - justify-self: center
        - padding: 0px 6px
        - font-weight: bold
        - font-size: 14px