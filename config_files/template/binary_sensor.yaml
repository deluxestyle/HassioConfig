- binary_sensor:
  - name: presence
    unique_id: presence
    device_class: presence
    state: >
        {% if is_state('person.wolfgang', 'home') or is_state('person.christina', 'home') %}
          on
        {% else %}
          off
        {% endif %}

  - name: bosch_home_connect
    unique_id: bosch_home_connect
    device_class: problem
    state: "{{ states('sensor.home_connect_status')|lower in ['unknown','unavailable','none', 'blocked', 'loading_failed'] }}"

  - name: Waschmaschine
    unique_id: washing_machine
    # devive_class: power
    state: "{{ states.sensor.waschmaschine_derzeitiger_verbrauch.state | float > 3 }}"

#### Update Senors ####
  - name: docker_update
    unique_id: docker_update
    device_class: update
    state: >
        {% if is_state('update.wud_container_local_zigbee2mqtt', 'on') 
            or is_state('update.wud_container_local_dnscrypt', 'on') 
            or is_state('update.wud_container_local_nginx_proxy_manager', 'on') 
            or is_state('update.wud_container_local_pihole', 'on') 
            or is_state('update.wud_container_local_vaultwarden', 'on') 
            or is_state('update.wud_container_local_wud', 'on') 
            or is_state('update.wud_container_local_mosquitto', 'on') 
            or is_state('update.wud_container_local_homeassistant', 'on') 
            or is_state('update.wud_container_local_grafana', 'on') 
            or is_state('update.wud_container_local_portainer', 'on') 
            or is_state('update.wud_container_local_victoriametrics', 'on') 
            %}
          on
        {% else %}
          off
        {% endif %}

  - name: nextcloud_update_status
    unique_id: nextcloud_update_status
    device_class: update
    state: "{{ states('sensor.nextcloud_version') != states('sensor.nextcloud_latest_version') }}"


