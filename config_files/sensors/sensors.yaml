- platform: systemmonitor
  resources:
      - type: memory_free
      - type: memory_use
      - type: memory_use_percent
      - type: processor_use
      - type: disk_use_percent
        arg: /
      - type: disk_use
        arg: /
      - type: disk_free
        arg: /
      - type: load_1m 
      - type: load_5m
      - type: load_15m
      - type: swap_use
      - type: swap_free
      - type: swap_use_percent
      - type: last_boot

- platform: template
  sensors:
      remote_state:
        friendly_name: "Multimedia"
        value_template: '{{ states.remote.harmony_hub.attributes.current_activity }}'
      presence:
        friendly_name: Anwesenheit
        value_template: >
            {% if is_state('person.wolfgang', 'home') or is_state('person.christina', 'home') %}
              home
            {% else %}
              not_home
            {% endif %}
      wireguard_iphonepro:
        friendly_name: "Wireguard iPhone 11 Pro"
        value_template: >-
          {% if is_state('sensor.wireguard', 'unavailable') %}
            {{ states('sensor.wireguard_iphonepro') }}
          {% else %}
            {% if state_attr('sensor.wireguard', 'iphonepro').latest_handshake > ( as_timestamp(now()) ) -300 %}
              Verbunden
            {% else %}
              kein VPN
            {% endif %}
          {% endif %}
      wireguard_ipad:
        friendly_name: "Wireguard iPad"
        value_template: >-
          {% if is_state('sensor.wireguard', 'unavailable') %}
            {{ states('sensor.wireguard_ipad') }}
          {% else %}
            {% if state_attr('sensor.wireguard', 'ipad').latest_handshake > ( as_timestamp(now()) ) -300 %}
              Verbunden
            {% else %}
              kein VPN
            {% endif %}
          {% endif %}
      wireguard_laptoperlau:
        friendly_name: "Wireguard LaptopErlau"
        value_template: >-
          {% if is_state('sensor.wireguard', 'unavailable') %}
            {{ states('sensor.wireguard_laptoperlau') }}
          {% else %}
            {% if state_attr('sensor.wireguard', 'laptoperlau').latest_handshake > ( as_timestamp(now()) ) -300 %}
              Verbunden
            {% else %}
              kein VPN
            {% endif %}
          {% endif %}
      wireguard_hpspectre:
        friendly_name: "Wireguard HP Spectre"
        value_template: >-
          {% if is_state('sensor.wireguard', 'unavailable') %}
            {{ states('sensor.wireguard_hpspectre') }}
          {% else %}
            {% if state_attr('sensor.wireguard', 'hp-spectre').latest_handshake > ( as_timestamp(now()) ) -300 %}
              Verbunden
            {% else %}
              kein VPN
            {% endif %}
          {% endif %}

- platform: uptime
  name: online_time

- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'time_date'

- platform: command_line
  name: CPU Temperature
  command: "cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "Â°C"
  value_template: '{{ value | multiply(0.001) | round(1) }}'

- platform: rest
  name: wireguard
  resource: http://192.168.200.33:9090/
  json_attributes:
  - iphonepro
  - ipad
  - laptoperlau
  - hp-spectre
  value_template: "OK"

- platform: authenticated

- platform: influxdb
  host: 192.168.200.33
  port: 8086
  username: home-assistant
  password: !secret influxdb_password
  queries:
    - name: InfluxDB Database Size
      unit_of_measurement: MB
      value_template: '{{ (value | float / 1024 /1024) | round(1) }}'
      group_function: mean
      measurement: '"monitor"."shard"'
      database: _internal
      where: 'time > now() - 1m AND "database"=''home_assistant'''
      field: diskBytes

- platform: sql
  db_url: mysql://homeassistant:homeassistant@core-mariadb/homeassistant
  queries:
    - name: MariaDB Database Size
      query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
      column: "value"
      unit_of_measurement: MB  